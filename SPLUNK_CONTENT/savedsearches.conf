[Train Classifier Model]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
alert.track = 0
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","duration","action"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = `comment("collect data and set target variable")`\
index=mail_secured sourcetype=mail_offline NOT \
    [| inputlookup emailSimilars.csv \
    | format] date_hour=* \
| eval target = case(like(source,"/home/splunk/knowbe4/ignore/%"),"ignore", like(source,"/home/splunk/knowbe4/investigate/%"),"investigate",true(),null()) \
| table _time target date_* _raw \
`comment("parse email and create features")`\
| mailparser messagefield=_raw all_headers=t adv_attrs=t \
`comment("under-sample majority class")`\
| sample 400 BY target seed=7350 \
`comment("return and create only feature fields")`\
| table date_hour date_wday target X-USANET-TAP-Score X-BAEAI-D* X-BAEAI-SPF Content-type *_len from_tld X-Priority has* num* uniq_links return_path_match* mail_text \
| fields - url_len \
| eval Content-type = mvindex(split('Content-type', ";"), 0) \
| eval is_multipart = if(match('Content-type', "(?i)^multipart"), 1, 0) \
`comment("lowercase, lemmatize, remove stopwords,punct,#s from text")`\
| cleantext textfield=mail_text mv=f\
`comment("change continuous fields into categorical")` \
| rangemap field=body_len qt01=0-111 qt02=112-166 qt03=167-207 qt04=208-237 qt05=238-273 qt06=274-335 qt07=336-422 qt08=423-513 qt09=514-679 qt10=680-949 qt11=950-1179 qt12=1180-1386 qt13=1387-1640 qt14=1640-2000 qt15=2001-2354 qt16=2355-2861 qt17=2862-3923 qt18=3924-5470 qt19=5471-8140 default=highest \
| rename range AS body_len \
| rangemap field=subject_len qt01=0-13 qt02=14-19 qt03=20-24 qt04=25-30 qt05=31-35 qt06=36-40 qt07=41-46 qt08=47-53 qt09=54-62 default=highest \
| rename range AS subject_len \
| rangemap field=num_attachment qt01=0-3 qt02=4-6 qt03=7-9 qt04=10-12 default=highest \
| rename range AS num_attachment \
| rangemap field=num_email_addr qt01=0-38 qt02=39-77 qt03=78-115 qt04=116-154 default=highest \
| rename range AS num_email_addr \
| rangemap field=num_email_link qt01=0-20 qt02=21-41 qt03=42-61 qt04=62-82 default=highest \
| rename range AS num_email_link \
| rangemap field=num_link qt01=0-1 qt02=2-2 qt03=3-3 qt04=4-6 qt05=7-9 qt06=10-14 default=highest \
| rename range AS num_link \
| rangemap field=num_masq_link qt01=0-0 qt02=1-1 default=highest \
| rename range AS num_masq_link \
| rangemap field=num_uniq_email_addr qt01=0-1 qt02=2-2 default=highest \
| rename range AS num_uniq_email_addr \
| rangemap field=num_uniq_url qt01=0-1 qt02=2-2 qt03=3-3 qt04=4-6 qt05=7-9 qt06=10-15 default=highest \
| rename range AS num_uniq_url \
| rangemap field=num_url qt01=0-1 qt02=2-2 qt03=3-4 qt04=5-6 qt05=7-11 qt06=12-17 default=highest \
| rename range AS num_url \
| rangemap field=num_repeat_url qt01=0-1 qt02=2-3 default=highest \
| rename range AS num_repeat_url\
`comment("one hot encoding of categorical fields")` \
| foreach *_len \
    [ eval <<MATCHSTR>>_len_{<<FIELD>>} =1] \
| foreach num_* \
    [ eval num_<<MATCHSTR>>_{<<FIELD>>} =1] \
| foreach X-* \
    [ eval <<MATCHSTR>>_{<<FIELD>>} =1] \
| foreach date-* \
    [ eval <<MATCHSTR>>_{<<FIELD>>} =1] \
| foreach from_tld \
    [ eval from_tld_{<<FIELD>>} =1] \
| foreach Content-type \
    [ eval Content-type_{<<FIELD>>} =1] \
| fields - X-BAEAI-* X-USANET* X-Priority *_ from_tld Content-type date_hour date_wday *_len num_attachment num_*email_addr num_*link num_*url \
| fillnull value=0 \
| fit TFBinary mail_text max_features=9000 ngram_range=1-3 min_df=2 \
| fit MinMaxScaler * \
| fields - MMS_target* \
| table target MMS* \
| sample partitions=10 seed=7350 \
| search partition_number < 8\
| fit LinearSVC C=0.1 tol=0.1 target from MMS_* into knowbe4_svc \
| rename "predicted(target)" AS v1\
| fit ExtraTreesClassifier n_estimators=50 random_state=7350 max_leaf_nodes=200 max_depth=100,target from MMS_* into knowbe4_et \
| rename "predicted(target)" AS v2\
| fit MLPClassifier max_iter=1200 hidden_layer_sizes=50-50-50 learning_rate=adaptive target from MMS_* into knowbe4_nn\
| rename "predicted(target)" AS v3\
| table target v*\
| eval vote = case(v1=='v2',v1,v1=='v3',v1,true(),v2)

[Predict on Test Set]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
alert.track = 0
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","duration","action"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = `comment("collect data and set target variable")`\
index=mail_secured sourcetype=mail_offline NOT \
    [| inputlookup emailSimilars.csv \
    | format] date_hour=* \
| eval target = case(like(source,"/home/splunk/knowbe4/ignore/%"),"ignore", like(source,"/home/splunk/knowbe4/investigate/%"),"investigate",true(),null()) \
| table _time target date_* _raw \
`comment("parse email and create features")`\
| mailparser messagefield=_raw all_headers=t adv_attrs=t \
`comment("under-sample majority class")`\
| sample 400 BY target seed=7350 \
`comment("return and create only feature fields")`\
| table date_hour date_wday target X-USANET-TAP-Score X-BAEAI-D* X-BAEAI-SPF Content-type *_len from_tld X-Priority has* num* uniq_links return_path_match* mail_text \
| fields - url_len \
| eval Content-type = mvindex(split('Content-type', ";"), 0) \
| eval is_multipart = if(match('Content-type', "(?i)^multipart"), 1, 0) \
`comment("lowercase, lemmatize, remove stopwords,punct,#s from text")`\
| cleantext textfield=mail_text mv=f\
`comment("change continuous fields into categorical")` \
| rangemap field=body_len qt01=0-111 qt02=112-166 qt03=167-207 qt04=208-237 qt05=238-273 qt06=274-335 qt07=336-422 qt08=423-513 qt09=514-679 qt10=680-949 qt11=950-1179 qt12=1180-1386 qt13=1387-1640 qt14=1640-2000 qt15=2001-2354 qt16=2355-2861 qt17=2862-3923 qt18=3924-5470 qt19=5471-8140 default=highest \
| rename range AS body_len \
| rangemap field=subject_len qt01=0-13 qt02=14-19 qt03=20-24 qt04=25-30 qt05=31-35 qt06=36-40 qt07=41-46 qt08=47-53 qt09=54-62 default=highest \
| rename range AS subject_len \
| rangemap field=num_attachment qt01=0-3 qt02=4-6 qt03=7-9 qt04=10-12 default=highest \
| rename range AS num_attachment \
| rangemap field=num_email_addr qt01=0-38 qt02=39-77 qt03=78-115 qt04=116-154 default=highest \
| rename range AS num_email_addr \
| rangemap field=num_email_link qt01=0-20 qt02=21-41 qt03=42-61 qt04=62-82 default=highest \
| rename range AS num_email_link \
| rangemap field=num_link qt01=0-1 qt02=2-2 qt03=3-3 qt04=4-6 qt05=7-9 qt06=10-14 default=highest \
| rename range AS num_link \
| rangemap field=num_masq_link qt01=0-0 qt02=1-1 default=highest \
| rename range AS num_masq_link \
| rangemap field=num_uniq_email_addr qt01=0-1 qt02=2-2 default=highest \
| rename range AS num_uniq_email_addr \
| rangemap field=num_uniq_url qt01=0-1 qt02=2-2 qt03=3-3 qt04=4-6 qt05=7-9 qt06=10-15 default=highest \
| rename range AS num_uniq_url \
| rangemap field=num_url qt01=0-1 qt02=2-2 qt03=3-4 qt04=5-6 qt05=7-11 qt06=12-17 default=highest \
| rename range AS num_url \
| rangemap field=num_repeat_url qt01=0-1 qt02=2-3 default=highest \
| rename range AS num_repeat_url\
`comment("one hot encoding of categorical fields")` \
| foreach *_len \
    [ eval <<MATCHSTR>>_len_{<<FIELD>>} =1] \
| foreach num_* \
    [ eval num_<<MATCHSTR>>_{<<FIELD>>} =1] \
| foreach X-* \
    [ eval <<MATCHSTR>>_{<<FIELD>>} =1] \
| foreach date-* \
    [ eval <<MATCHSTR>>_{<<FIELD>>} =1] \
| foreach from_tld \
    [ eval from_tld_{<<FIELD>>} =1] \
| foreach Content-type \
    [ eval Content-type_{<<FIELD>>} =1] \
| fields - X-BAEAI-* X-USANET* X-Priority *_ from_tld Content-type date_hour date_wday *_len num_attachment num_*email_addr num_*link num_*url \
| fillnull value=0 \
| fit TFBinary mail_text max_features=9000 ngram_range=1-3 min_df=2 \
| fit MinMaxScaler * \
| table target MMS* \
| sample partitions=10 seed=7350 \
| search partition_number > 7\
| apply knowbe4_svc AS v1\
| apply knowbe4_et AS v2\
| apply knowbe4_nn AS v3\
| table target v*\
| eval vote = case(v1=='v2',v1,v1=='v3',v1,true(),v2)

[Predict Model on Unseen Data]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
alert.track = 0
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","duration","action"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = `comment("collect data and set target variable")`\
index=mail_secured sourcetype=mail_offline source="/home/splunk/knowbe4/ignore/*" NOT \
    [| inputlookup emailSimilars.csv \
    | format] date_hour=* NOT \
    [| inputlookup seed7350IgnoreClass.csv\
    | format]\
| eval target = case(like(source,"/home/splunk/knowbe4/ignore/%"),"ignore", like(source,"/home/splunk/knowbe4/investigate/%"),"investigate",true(),null()) \
| table _time target date_* _raw source\
`comment("parse email and create features")`\
| mailparser messagefield=_raw all_headers=t adv_attrs=t \
`comment("under-sample majority class")`\
| sample 400 BY target seed=7350 \
`comment("return and create only feature fields")`\
| table date_hour date_wday target X-USANET-TAP-Score X-BAEAI-D* X-BAEAI-SPF Content-type *_len from_tld X-Priority has* num* uniq_links return_path_match* mail_text source\
| fields - url_len \
| eval Content-type = mvindex(split('Content-type', ";"), 0) \
| eval is_multipart = if(match('Content-type', "(?i)^multipart"), 1, 0) \
`comment("lowercase, lemmatize, remove stopwords,punct,#s from text")`\
| cleantext textfield=mail_text mv=f\
`comment("change continuous fields into categorical")` \
| rangemap field=body_len qt01=0-111 qt02=112-166 qt03=167-207 qt04=208-237 qt05=238-273 qt06=274-335 qt07=336-422 qt08=423-513 qt09=514-679 qt10=680-949 qt11=950-1179 qt12=1180-1386 qt13=1387-1640 qt14=1640-2000 qt15=2001-2354 qt16=2355-2861 qt17=2862-3923 qt18=3924-5470 qt19=5471-8140 default=highest \
| rename range AS body_len \
| rangemap field=subject_len qt01=0-13 qt02=14-19 qt03=20-24 qt04=25-30 qt05=31-35 qt06=36-40 qt07=41-46 qt08=47-53 qt09=54-62 default=highest \
| rename range AS subject_len \
| rangemap field=num_attachment qt01=0-3 qt02=4-6 qt03=7-9 qt04=10-12 default=highest \
| rename range AS num_attachment \
| rangemap field=num_email_addr qt01=0-38 qt02=39-77 qt03=78-115 qt04=116-154 default=highest \
| rename range AS num_email_addr \
| rangemap field=num_email_link qt01=0-20 qt02=21-41 qt03=42-61 qt04=62-82 default=highest \
| rename range AS num_email_link \
| rangemap field=num_link qt01=0-1 qt02=2-2 qt03=3-3 qt04=4-6 qt05=7-9 qt06=10-14 default=highest \
| rename range AS num_link \
| rangemap field=num_masq_link qt01=0-0 qt02=1-1 default=highest \
| rename range AS num_masq_link \
| rangemap field=num_uniq_email_addr qt01=0-1 qt02=2-2 default=highest \
| rename range AS num_uniq_email_addr \
| rangemap field=num_uniq_url qt01=0-1 qt02=2-2 qt03=3-3 qt04=4-6 qt05=7-9 qt06=10-15 default=highest \
| rename range AS num_uniq_url \
| rangemap field=num_url qt01=0-1 qt02=2-2 qt03=3-4 qt04=5-6 qt05=7-11 qt06=12-17 default=highest \
| rename range AS num_url \
| rangemap field=num_repeat_url qt01=0-1 qt02=2-3 default=highest \
| rename range AS num_repeat_url\
`comment("one hot encoding of categorical fields")` \
| foreach *_len \
    [ eval <<MATCHSTR>>_len_{<<FIELD>>} =1] \
| foreach num_* \
    [ eval num_<<MATCHSTR>>_{<<FIELD>>} =1] \
| foreach X-* \
    [ eval <<MATCHSTR>>_{<<FIELD>>} =1] \
| foreach date-* \
    [ eval <<MATCHSTR>>_{<<FIELD>>} =1] \
| foreach from_tld \
    [ eval from_tld_{<<FIELD>>} =1] \
| foreach Content-type \
    [ eval Content-type_{<<FIELD>>} =1] \
| fields - X-BAEAI-* X-USANET* X-Priority *_ from_tld Content-type date_hour date_wday *_len num_attachment num_*email_addr num_*link num_*url \
| fillnull value=0 \
| fit TFBinary mail_text max_features=9000 ngram_range=1-3 min_df=2 \
| fit MinMaxScaler * \
| fields - MMS_target* \
| table target MMS* \
| apply knowbe4_svc AS v1\
| apply knowbe4_et AS v2\
| apply knowbe4_nn AS v3\
| eval vote = case(v1=='v2',v1,v1=='v3',v1,true(),v2)\
| table target v* source
